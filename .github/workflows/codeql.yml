name: "CodeQL Advanced Security Scanning"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '33 12 * * 2'  # 每周二中午12:33运行

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: python
          build-mode: none
        - language: javascript-typescript
          build-mode: none
        # 根据项目需要添加其他语言
        # - language: java-kotlin
        #   build-mode: none
        # - language: go
        #   build-mode: autobuild

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # 使用安全和质量查询包
        queries: security-extended,security-and-quality

    # 如果是编译语言且build-mode为manual，需要添加构建步骤
    - if: matrix.build-mode == 'manual'
      name: Manual build
      shell: bash
      run: |
        echo 'Replace this with your build commands'
        # 例如：
        # make bootstrap
        # make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  # 额外的安全扫描任务
  security-scan:
    name: Additional Security Scans
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Bandit Security Linter (Python)
      if: hashFiles('**/*.py') != ''
      uses: tj-actions/bandit@v5.5
      with:
        options: "-r . -f json -o bandit-report.json || true"

    - name: Upload Bandit scan results
      if: hashFiles('bandit-report.json') != ''
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: bandit-report.json

    - name: Run Semgrep SAST
      uses: returntocorp/semgrep-action@v1
      with:
        publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
        publishDeployment: true
        generateSarif: "1"
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

    - name: Upload Semgrep results to GitHub
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: semgrep.sarif

    - name: Run TruffleHog OSS secret scanner
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified